{"version":3,"sources":["components/menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","Menu","props","useState","numPages","setNumPages","pageNumber","file","onLoadSuccess","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAkBAA,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAyBeC,MAtBf,SAAcC,GAAQ,IAAD,EACeC,mBAAS,GADxB,mBACVC,EADU,KACAC,EADA,OAEmBF,mBAAS,GAF5B,mBAEVG,EAFU,KAQjB,OARiB,KASb,gCACI,eAAC,IAAD,CACIC,KAAK,iBACLC,cARZ,YAA8C,IAAbJ,EAAY,EAAZA,SAC7BC,EAAYD,IAKR,UAII,cAAC,IAAD,CAAME,WAAY,IAClB,cAAC,IAAD,CAAMA,WAAY,OAEtB,sCAASA,EAAT,OAAyBF,SC3BtBK,MARf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40b94a5e.chunk.js","sourcesContent":["// import React from \"react\";\n// import { Document, Page, pdfjs } from \"react-pdf\";\n// import PDF from \"./pub_menu.pdf\";\n\n// pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n// const Menu = () => (\n//     <Document file={PDF}>\n//         <Page pageNumber={1} />\n//         <Page pageNumber={2} />\n//     </Document>\n// );\n\n// export default Menu;\n//----------------------------\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n\nfunction Menu(props) {\n    const [numPages, setNumPages] = useState(2);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n    }\n\n    return (\n        <div>\n            <Document\n                file=\"./pub_menu.pdf\"\n                onLoadSuccess={onDocumentLoadSuccess}\n            >\n                <Page pageNumber={1} />\n                <Page pageNumber={2} />\n            </Document>\n            <p>Page {pageNumber} of {numPages}</p>\n        </div>\n    );\n}\n\nexport default Menu;","import React from 'react';\nimport Menu from './components/menu'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Menu />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}